{"ts":1380458066926,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"(function($, undefined) {\n    kendo.data.binders.srcPath = kendo.data.Binder.extend( {\n        refresh: function() {\n            var value = this.bindings[\"srcPath\"].get();\n\n            if (value) {\n                $(this.element).attr(\"src\", \"content/images/200/\" + value);\n            }\n        }\n    });\n\n    kendo.data.binders.format = kendo.data.Binder.extend( {\n        refresh: function() {\n            var value = this.bindings[\"format\"].get();\n\n            if (value) {\n                $(this.element).text(kendo.toString(value, \"c\"));\n            }\n        }\n    });\n\n    kendo.data.binders.innerText = kendo.data.Binder.extend( {\n        refresh: function() {\n            var value = this.bindings[\"innerText\"].get();\n\n            if (value) {\n                $(this.element).text(\"Item added to cart \" + value + \" times.\");\n            }\n        }\n    });\n    \n    //viewModel\n    var viewModel = kendo.observable({\n        dataSource: new kendo.data.DataSource({\n            transport: { \n                read: { \n                    url: \"content/menu.json\", \n                    dataType: \"json\" \n                } \n            }\n        }),\n        added: [],\n        currentItem: null,\n        addToCart: addToCart,\n        removeItem: removeItem,\n        checkout: checkout,\n        showCheckout: showCheckout,\n        showLabel: showLabel,\n        showTotal: showTotal\n    });\n\n    function showHomeView(e) {\n        viewModel.dataSource.group([]);\n        $(\"#featured\").data(\"kendoMobileListView\").options.type = \"flat\";\n        viewModel.dataSource.filter({ field: \"featured\", operator: \"eq\", value: true});\n    }\n\n    function showMenuView() {\n        viewModel.dataSource.filter([]);\n        viewModel.dataSource.group({field: \"category\"});\n    } \n    \n    function showCartView() {\n        viewModel.showCheckout();\n    }\n\n    function addToCart(e) {\n        var item,\n            ordered;\n\n        if(e.data.id) {\n            item = e.data     \n        } else {\n            item = this.get(\"currentItem\");\n        }\n\n        ordered = item.get(\"ordered\") || 0;\n        ordered += 1;\n\n        item.set(\"ordered\", ordered);\n\n        if (ordered === 1) {\n            this.added.push(item);\n        }\n\n        e.preventDefault();\n    }\n\n    function removeItem(e) {\n        var item = e.data,\n            index = viewModel.added.indexOf(item),\n            currentView = app.view();\n\n        item.set(\"ordered\", 0);\n        viewModel.added.splice(index, 1);\n\n        currentView.scroller.reset();\n        e.preventDefault();\n    }\n\n    function checkout(e) {\n        var that = this,\n            dataSourceData = this.dataSource.data(),\n            length = dataSourceData.length;\n\n        setTimeout(function () {\n            for (idx = 0; idx < length; idx++) {\n                dataSourceData[idx].set(\"ordered\", 0);\n            }\n\n            that.set(\"added\", []);\n        }, 400);\n    }\n\n    function showCheckout(e) {\n        var button = $(\"#checkout\");\n\n        if (this.added.length) {\n            button.show();\n        } else {\n            button.hide();\n        }\n    }\n    \n    function showLabel() {\n        return this.get(\"currentItem\") && this.get(\"currentItem\").get(\"ordered\") > 0;\n    }\n\n    function showDetailsView(e) {\n        var id = parseInt(e.view.params.id),\n            item = viewModel.dataSource.get(id);\n\n        viewModel.set(\"currentItem\", item);\n    }\n\n    function showTotal() {\n        var cartItems = this.get(\"added\"),\n            total = 0;\n        for(var idx = 0; idx < cartItems.length; idx++) {\n            total += cartItems[idx].ordered * cartItems[idx].price;\n        }\n        return kendo.toString(total, \"c\");\n    }\n\n    $.extend(window, {\n        showHomeView: showHomeView,\n        showMenuView: showMenuView,\n        showCartView: showCartView,\n        showDetailsView: showDetailsView,\n        viewModel: viewModel \n    });\n})(jQuery);\n"]],"start1":0,"start2":0,"length1":0,"length2":3910}]],"length":3910}
